/*    花朵数
? ? ? 一个N位的十进制正整数，如果它的每个位上的数字的N次方的和等于这个数本身，则称其为花朵数。
? ? ? 例如：当N=3时，153就满足条件，因为 1^3 + 5^3 + 3^3 = 153，这样的数字也被称为水仙花数（其中，“^”表示乘方，5^3表示5的3次方，也就是立方）。
? ? ? 当N=4时，1634满足条件，因为 1^4 + 6^4 + 3^4 + 4^4 = 1634。
参考公式
int intsum(int n) 
{
int sum = 0;
while(n) //不断分离最低位
{
sum += n%10;
n /= 10;
}
return sum;
} 

说明：此公式不完整，既算法有数据溢出的缺点
可以用信用卡号验证的算法，用字符型来保存整数
*/ 
#include<stdio.h>
int main() 
{
	long x,y;
	int i=0,j,k;
	long  a[10],b[10];//个位，十位，百位，千位 ，万位，十万位，百万位，千万位 
	printf("输入一个整数：");
	scanf("%d",&x);
	y=x;
	while(x)//用来求各个位的数，数组从最低位保存 
	{
		a[i++]=x%10;
		x/=10;
		printf("%d\n",a[i-1]);
	}
	b[i]=0;
	for(j=0;j<i;j++)
	{
		b[j]=1;
		for(k=0;k<i;k++)
		{
			b[j]*=a[j];
		}
		//printf("%d\n",b[j]);
		b[i]+=b[j];
    }
    //printf("%d",b[i]);
    if(b[i]==y)
    printf("是花朵数");
    else 
    printf("不是花朵数"); 
    return 0;
} 
